---

- hosts: all
  become: true
  tasks:

  - name: to enbale powertools for libyaml-devel
    shell:
       "dnf -y config-manager --set-enabled powertools"
   
  - name:  install build dependencies
    shell: 
       "yum install -y git-core zlib zlib-devel gcc-c++ patch readline readline-devel libyaml-devel libffi-devel openssl-devel make bzip2 autoconf automake libtool bison curl sqlite-devel"
  
  - name: checking existance of folder
    stat:
      path: /root/rbenv
    register: file_data

  - name: report if directory exist
    debug:
      msg: "The directory /root/rbenv exist, skipping to next task"
    when: file_data.stat.exists

  - name: clonning rbenv repos from github
    shell:
       "git clone https://github.com/rbenv/rbenv.git"
    args:
      chdir: /root 
    when: not file_data.stat.exists

  - name: checking existance of folder ~/.rbenv/plugins/ruby-build
    stat:
      path: /root/.rbenv/plugins/ruby-build
    register: ruby_file

  - name: report if file exist
    debug:
      msg: "The directory /root/.rbenv/plugins/ruby-build exist, skipping to next task"
    when: ruby_file.stat.exists
  
  - name: clonnig ruby-build.git repo and forward it to ~/.rbenv/plugins/ruby-build
    shell:
       "git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build" 
    when: not ruby_file.stat.exists

  - name: searching string
    lineinfile: 
      name: /root/.bashrc
      line: "$HOME/rbenv/bin:$HOME/.rbenv/bin:$HOME/.rbenv/plugins/ruby-build/bin:$PATH \n eval $(rbenv init -)"
      state: absent
    check_mode: yes
    register: conf
 
  - name: Building environment for rbuy
    shell:  |
      echo 'export PATH="$HOME/rbenv/bin:$HOME/.rbenv/bin:$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc
      echo 'eval "$(rbenv init -)"' >> ~/.bashrc
      source /root/.bashrc
    when: conf is not changed
    
  - debug:
      msg: "varibale exist"
    when: conf is changed

  - name: installing perl
    shell:
       "yum install perl -y"

  - name: check if rbenv already exist
    shell: | 
      rpm -qa | grep rbnev 2.7.7
      rpm -qa | grep rbnev global 2.7.7
    register: rbnev_installed
    ignore_errors: true
    check_mode: yes

  - name: installing rbenv
    shell: |
      rbenv install 2.7.7
      rbenv global 2.7.7
    when: rbnev_installed is changed


  - debug:
      msg: "rbenv 2.7.7 and global exist"
    when: rbnev_installed is not changed

  - name: installing rubygem-bundler
    shell: 
       "yum install rubygem-bundler -y"
  
  - name: checking existance of bugx folder
    stat:
      path: /root/bugx_wepapp/
    register: bugxfolder_data


  - name: creating /root/bugx_wepapp
    shell:
       "mkdir /root/bugx_wepapp/"
    when: not bugxfolder_data.stat.exists

  - name: check if brew-user already exist
    ansible.builtin.getent:
      database: passwd
      key: brew
      fail_key: False

  - debug:
      msg: " brew-user does not exist so creating it"
    

  - name: Deploying app
    shell: |
      useradd brew-user
      usermod -aG root brew-user


  - name: checking existance of bugx_wepapp folder
    stat:
      path: /root/bugx_wepapp/
    register: bugx_data
    

  - name: clonnig bugx webapp files
    ansible.builtin.git:
      accept_hostkey: true
      repo: git@github.com:EshginGuluzade/bugx_wepapp.git
      dest: /root/bugx_wepapp/
    when: not bugx_data.stat.exists
    
    
  - name: searching string
    lineinfile: 
      name: /home/brew-user/.bash_profile
      line: "GEM_HOME=$HOME/.gem \n PATH=$PATH:$HOME/.gem/bin \n PATH=$PATH:$HOME/.gem/ruby//bin" 
      state: absent
    check_mode: yes
    register: envvar
 
  - name: adding env varibales to .bash_profile for running command without error
    shell: |
      echo "export GEM_HOME=$HOME/.gem" >> .bash_profile
      echo "export PATH=$PATH:$HOME/.gem"/bin >> .bash_profile
      echo "export PATH=$PATH:$HOME/.gem/ruby/*" >> .bash_profile
      source /home/brew-user/.bash_profile
    when: envvar is not changed 
    args:
      chdir: /home/brew-user/
 
  - name: giving permission to user for accesing /root/.rbenv/versions
    shell: |
      chown -R brew-user:brew-user /root/.rbenv/versions/*
      chown -R brew-user:brew-user /Library/Ruby/Gems/*
      chown -R brew-user:brew-user /usr/local/*
      bundle update --bundler
    args:
      chdir: /root/


  - name: installing bundle as a brew-user 
    shell: 
       "su -c 'bundle install' brew-user"
    args:
      chdir: /root/bugx_wepapp/

  - name: bundle exec jekyll serve
    shell: 
       "bundle exec jekyll serve --host 0.0.0.0"
    async: 30
    poll: 0
    args:
      chdir: /root/bugx_wepapp/

  - name: checking existance of bugx.service
    stat:
      path: /etc/systemd/system/bugx.service
    register: bugx_service

  - name: creating bugx service
    copy:
      src: /root/bugx.service/
      dest: /etc/systemd/system/
    when: not bugx_service.stat.exists

  - name: enable and start firewalld
    shell: |
      systemctl enable firewalld
      systemctl start firewalld

  - name: permit traffic in default zone for http service
    ansible.posix.firewalld:
      service: http
      permanent: yes
      state: enabled

  - name: permit traffic in default zone on port 4000/tcp
    ansible.posix.firewalld:
      port: 4000/tcp
      permanent: yes
      state: enabled

  - name: reload firewalld
    shell: |
      firewall-cmd --reload
      systemctl restart firewalld

  - name: enable and start bugx server
    shell: |
      systemctl daemon-reload
      systemctl enable bugx
      systemctl restart bugx

















   
    

        